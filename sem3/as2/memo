ヒープソートの基本的な流れは以下のようになる．


1.配列を先頭を根とする降順の二分ヒープ木に並べ替える．

2.二分ヒープ木の根の値（最大値）を取り出し，二分ヒープ木の末尾と交換する．

3.二分ヒープ木の大きさを1減らす．

4.二分ヒープ木の根を節点としてdownheapを呼び出すことで
  二分ヒープ木を再構築する．

5.2〜4をソートが完了するまで繰り返す．


SWAP(i,j) と表示し，

(先頭の節点kと二分ヒープ木の大きさM)DH(k,M)

ーーーーーーーーーーーーーーーーーーーーーーー
1.節点kの値と子の節点の値を比較する．
  子の値の方が大きい場合は大きい方の子の値と節点kの値を交換する．

  節点kの値の方が大きい，または等しい場合はすでに
  降順の二分ヒープ木が作成されているので終了する．
  (子が存在しない場合も終了する)➡︎outofrangeの時

2.交換した子のindexをkとし1に戻る．

この関数を与えられた配列に対して逆順に適用させていくことで
ボトムアップに降順の二分ヒープ木を作成することができる．

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

------------------------------------------
7 2 1 3 7 4 6 5
出力例
INIT:::::::  2  1  3  7  4  6  5
DH( 2, 7) SWAP( 2, 5)  2  1  6  7  4  3  5
DH( 1, 7) SWAP( 1, 3)  2  7  6  1  4  3  5
DH( 0, 7) SWAP( 0, 1)  7  2  6  1  4  3  5
DH( 0, 7) SWAP( 1, 4)  7  4  6  1  2  3  5
SWAP( 0, 6)  5  4  6  1  2  3  7
DH( 0, 6) SWAP( 0, 2)  6  4  5  1  2  3  7
SWAP( 0, 5)  3  4  5  1  2  6  7
DH( 0, 5) SWAP( 0, 2)  5  4  3  1  2  6  7
SWAP( 0, 4)  2  4  3  1  5  6  7
DH( 0, 4) SWAP( 0, 1)  4  2  3  1  5  6  7
SWAP( 0, 3)  1  2  3  4  5  6  7
DH( 0, 3) SWAP( 0, 2)  3  2  1  4  5  6  7
SWAP( 0, 2)  1  2  3  4  5  6  7
DH( 0, 2) SWAP( 0, 1)  2  1  3  4  5  6  7
SWAP( 0, 1)  1  2  3  4  5  6  7
DONE:::::::  1  2  3  4  5  6  7



7 7 6 5 4 3 2 1

INIT:::::::  7  6  5  4  3  2  1
SWAP( 0, 6)  1  6  5  4  3  2  7
DH( 0, 6) SWAP( 0, 1)  6  1  5  4  3  2  7
DH( 0, 6) SWAP( 1, 3)  6  4  5  1  3  2  7
SWAP( 0, 5)  2  4  5  1  3  6  7
DH( 0, 5) SWAP( 0, 2)  5  4  2  1  3  6  7
SWAP( 0, 4)  3  4  2  1  5  6  7
DH( 0, 4) SWAP( 0, 1)  4  3  2  1  5  6  7
SWAP( 0, 3)  1  3  2  4  5  6  7
DH( 0, 3) SWAP( 0, 1)  3  1  2  4  5  6  7
SWAP( 0, 2)  2  1  3  4  5  6  7
SWAP( 0, 1)  1  2  3  4  5  6  7
DONE:::::::  1  2  3  4  5  6  7


INIT::::::: 10 15  8  4 12  9 11  5  3 13  1  2  6
DH( 4,13) SWAP( 4, 9) 10 15  8  4 13  9 11  5  3 12  1  2  6
DH( 3,13) SWAP( 3, 7) 10 15  8  5 13  9 11  4  3 12  1  2  6
DH( 2,13) SWAP( 2, 6) 10 15 11  5 13  9  8  4  3 12  1  2  6
DH( 0,13) SWAP( 0, 1) 15 10 11  5 13  9  8  4  3 12  1  2  6
DH( 0,13) SWAP( 1, 4) 15 13 11  5 10  9  8  4  3 12  1  2  6
DH( 0,13) SWAP( 4, 9) 15 13 11  5 12  9  8  4  3 10  1  2  6
SWAP( 0,12)  6 13 11  5 12  9  8  4  3 10  1  2 15
DH( 0,12) SWAP( 0, 1) 13  6 11  5 12  9  8  4  3 10  1  2 15
DH( 0,12) SWAP( 1, 4) 13 12 11  5  6  9  8  4  3 10  1  2 15
DH( 0,12) SWAP( 4, 9) 13 12 11  5 10  9  8  4  3  6  1  2 15
SWAP( 0,11)  2 12 11  5 10  9  8  4  3  6  1 13 15
DH( 0,11) SWAP( 0, 1) 12  2 11  5 10  9  8  4  3  6  1 13 15
DH( 0,11) SWAP( 1, 4) 12 10 11  5  2  9  8  4  3  6  1 13 15
DH( 0,11) SWAP( 4, 9) 12 10 11  5  6  9  8  4  3  2  1 13 15
SWAP( 0,10)  1 10 11  5  6  9  8  4  3  2 12 13 15
DH( 0,10) SWAP( 0, 2) 11 10  1  5  6  9  8  4  3  2 12 13 15
DH( 0,10) SWAP( 2, 5) 11 10  9  5  6  1  8  4  3  2 12 13 15
SWAP( 0, 9)  2 10  9  5  6  1  8  4  3 11 12 13 15
DH( 0, 9) SWAP( 0, 1) 10  2  9  5  6  1  8  4  3 11 12 13 15
DH( 0, 9) SWAP( 1, 4) 10  6  9  5  2  1  8  4  3 11 12 13 15
SWAP( 0, 8)  3  6  9  5  2  1  8  4 10 11 12 13 15
DH( 0, 8) SWAP( 0, 2)  9  6  3  5  2  1  8  4 10 11 12 13 15
DH( 0, 8) SWAP( 2, 6)  9  6  8  5  2  1  3  4 10 11 12 13 15
SWAP( 0, 7)  4  6  8  5  2  1  3  9 10 11 12 13 15
DH( 0, 7) SWAP( 0, 2)  8  6  4  5  2  1  3  9 10 11 12 13 15
SWAP( 0, 6)  3  6  4  5  2  1  8  9 10 11 12 13 15
DH( 0, 6) SWAP( 0, 1)  6  3  4  5  2  1  8  9 10 11 12 13 15
DH( 0, 6) SWAP( 1, 3)  6  5  4  3  2  1  8  9 10 11 12 13 15
SWAP( 0, 5)  1  5  4  3  2  6  8  9 10 11 12 13 15
DH( 0, 5) SWAP( 0, 1)  5  1  4  3  2  6  8  9 10 11 12 13 15
DH( 0, 5) SWAP( 1, 3)  5  3  4  1  2  6  8  9 10 11 12 13 15
SWAP( 0, 4)  2  3  4  1  5  6  8  9 10 11 12 13 15
DH( 0, 4) SWAP( 0, 2)  4  3  2  1  5  6  8  9 10 11 12 13 15
SWAP( 0, 3)  1  3  2  4  5  6  8  9 10 11 12 13 15
DH( 0, 3) SWAP( 0, 1)  3  1  2  4  5  6  8  9 10 11 12 13 15
SWAP( 0, 2)  2  1  3  4  5  6  8  9 10 11 12 13 15
SWAP( 0, 1)  1  2  3  4  5  6  8  9 10 11 12 13 15
DONE:::::::  1  2  3  4  5  6  8  9 10 11 12 13 15

--------------------------------------------

func_swap_により値を入れ替えるたびに，
入れ替えた要素の場所と配列全体の要素を以下の書式で表示すること
交換した2つの要素番号i,j(i<j)を用いて SWAP(i,j) と表示し，
空白後に交換後の配列の全要素を表示する．
ただし，交換が実行されなかった場合は何も表示してはいけない．

例：要素番号 0,12の要素を交換した場合
SWAP(⊔0,12)⊔⊔6⊔⊔2⊔⊔8⊔⊔4⊔11⊔⊔9⊔12⊔⊔5⊔⊔3⊔13⊔⊔1⊔⊔7⊔10↩︎



また，downheap関数内で要素を入れ替えた場合は，
そのdownheap関数を呼び出した際の引数
(先頭の節点kと二分ヒープ木の大きさM)の情報を，
DH(k,M)と先頭に表示する．

例：downheapの引数がk=1,M=6，および，要素番号 0,12の要素を交換した場合 　　　　　
DH(⊔1,⊔6)⊔SWAP(⊔0,12)⊔⊔6⊔⊔2⊔⊔8⊔⊔4⊔11⊔⊔9⊔12⊔⊔5⊔⊔3⊔13⊔⊔1⊔⊔7⊔10↩︎
